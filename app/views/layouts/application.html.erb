<!DOCTYPE html>
<html>
<head>
  <title>Seen-It</title>
  <!-- Latest compiled and minified CSS -->
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/css/bootstrap.min.css">

<!-- Optional theme -->
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/css/bootstrap-theme.min.css">

  <%= stylesheet_link_tag    'application', media: 'all', 'data-turbolinks-track' => true %>
  <%= javascript_include_tag 'application', 'data-turbolinks-track' => true %>
  <%= javascript_include_tag 'application', 'annotator.min' => true %>
  <%= csrf_meta_tags %>

</head>
<body>

	<!-- top navbar -->
	<div class="navbar navbar-fixed-top">
		<div class="navbar-inner">
			<div class="container">

				<%= link_to "Post New Question", new_post_path, class: "btn btn-success" %>

				<div class="nav navbar-right nav pull-left">
					<li><%= link_to "all questions", posts_path %></li>
					<li><%= link_to 'about', about_path %></li>
				</div>
				<div class="hmenu nav navbar-right nav pull-right">
					<%= render 'devise/menu/login_items' %>
				</div>	
			</div>
		</div>
	</div>

	<div class="container">
    <p class="alert"><%= alert %></p>
		<p class="notice"><%= notice %></p>
<%= yield %>
	</div>

	<script>

		// See doc's at http://docs.annotatorjs.org/en/latest/modules/storage.html

		// STEP 1: Get Annotator to show up on the page:

		// In rails, this involves adding the javascript_include_tag call to 
		// 'annotator.min' at the top of this application.html.erb file.

		// That annotator.min file referenced above should be placed at
		// app/vendor/assets/javascripts/annotator.min.js.

		// Rails requires yet another change, in the file at
		// app/assets/images/javascripts/application.js ...

		// //= require annotator.min

		// With those two changes in place, and once jQuery is finished loading,
		// it is at this point possible to simply type the following four lines
		// of code into the console.  Of course, as you can see, it will alternatively
		// work to simply include it at the end of the application.html.erb body,
		// within script tags.

		// Of course, please note that -- at this point -- there is not yet any
		// actual storage of annotations occurring, and if you attempt to save an
		// annotation, a flash message will appear saying as much at the top of the
		// screen.

		$(document).ready(function() {

			var currentPage = window.location.href;

			console.log(currentPage);

			var pageUri = function() {
				return {
					beforeAnnotationCreated: function (ann) {
						ann.uri = currentPage;
					}
				}
			};

			// Instantiate the Annotator application
			var app = new annotator.App();

			// Use the standard user interface
			app.include(annotator.ui.main, {element: document.body});

			// Configure the http() module to address the
			// annotations API
			app.include(annotator.storage.http, {
				prefix: currentPage + 'annotator'
			});

			// Send the current page
			app.include(pageUri);

			// Use the promise returned from start to load
			// annotations from the storage component
			app.start()
			.then(function() {
				app.annotations.load({uri: currentPage});
				console.log("Annotations loaded");
			});
			console.log("Annotations started!");

		});

	</script>

</body>
</html>
